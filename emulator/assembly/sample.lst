Sections:
00: "seg10000" (10000-10044)


Source: "sample.asm"
                            	     1: ; ***********************************************************************************************************
                            	     2: ;
                            	     3: ; 										Simple assembly program.
                            	     4: ;
                            	     5: ;		Originally written by pweingar
                            	     6: ;		Extended by Paul Robson
                            	     7: ;
                            	     8: ; ***********************************************************************************************************
                            	     9: ;
                            	    10: ;	To run me, make asample or f68.exe asample\sample.a68 and run with F5, press F1 when the command line appears
                            	    11: ;
                            	    12: 
                            	    13: 				org 	$10000
                            	    14: 
                            	    15: start:          									; start tells us where to run from, because of -exec=start in the command line.
                            	    16: 				;
                            	    17: 				; 		Write Hello world using the O/S
                            	    18: 				;
00:00010000 7013            	    19: 				move.l #$13,d0                      ; sys_chan_write command #
00:00010002 7200            	    20:                 clr.l d1                            ; Channel #0 (the display)
00:00010004 243C00010036    	    21:                 move.l #greet,d2                    ; Pointer to message
00:0001000A 760E            	    22:                 move.l #greet_end-greet+1,d3        ; Length of message
00:0001000C 4E4F            	    23:                 trap #15 							; handles system functions
                            	    24:                 ;
                            	    25:                 ;		Write Hello world by writing straight to text memory
                            	    26:                 ;		do it 32 times from the screen top.
                            	    27:                 ;
00:0001000E 41F9FECA0000    	    28:                 lea.l 	$FECA0000,a0 				; screen text memory here
00:00010014 303C0020        	    29:                 move.w 	#32,d0 						; do it 32 times.
00:00010018 43FA001C        	    30: repeatmessage:  lea.l 	greet,a1 					; message here
                            	    31: copymessage:
00:0001001C 10D9            	    32: 				move.b 	(a1)+,(a0)+ 				; copy byte over.
00:0001001E 4A51            	    33: 				tst 	(a1) 						; is it zero.
00:00010020 66FA            	    34: 				bne 	copymessage 				; do until trailing 0 found.
00:00010022 56C8FFF4        	    35: 				dbne 	d0,repeatmessage 			; do it again !
                            	    36: 				;
                            	    37: 				; 		Exit the program.
                            	    38: 				;
                            	    39: 
00:00010026 23FC00000801FEC8	    40: 				move.l 	#$00000801,($FEC80000)		; switch text mode.
00:0001002E 0000
                            	    41: 
00:00010030 7000            	    42: done:           clr.l d0                            ; sys_exit
00:00010032 7200            	    43:                 clr.l d1                            ; Return value = 0
00:00010034 4E4F            	    44:                 trap #15
                            	    45: 
00:00010036 48656C6C6F2C2077	    46: greet:          dc.b "Hello, world!"
00:0001003E 6F726C6421
00:00010043 00              	    47: greet_end:      dc.b 0
                            	    48: 
                            	    49: 


Symbols by name:
copymessage                      A:0001001C
done                             A:00010030
greet                            A:00010036
greet_end                        A:00010043
repeatmessage                    A:00010018
start                            A:00010000

Symbols by value:
00010000 start
00010018 repeatmessage
0001001C copymessage
00010030 done
00010036 greet
00010043 greet_end
