Sections:
00: "seg10000" (10000-10078)


Source: "sample.asm"
                            	     1: ; ***********************************************************************************************************
                            	     2: ;
                            	     3: ; 										Simple assembly program.
                            	     4: ;
                            	     5: ;		Originally written by pweingar
                            	     6: ;		Extended by Paul Robson
                            	     7: ;
                            	     8: ; ***********************************************************************************************************
                            	     9: ;
                            	    10: ;	To run me, make asample or f68.exe asample\sample.a68 and run with F5, press F1 when the command line appears
                            	    11: ;
                            	    12: 
                            	    13: 				org 	$10000
                            	    14: 
                            	    15: vicky3 = $FEC80000
                            	    16: 
                            	    17: start:          									; start tells us where to run from, because of -exec=start in the command line.
                            	    18: 				;
                            	    19: 				; 		Write Hello world using the O/S
                            	    20: 				;
00:00010000 7013            	    21: 				move.l #$13,d0                      ; sys_chan_write command #
00:00010002 7200            	    22:                 clr.l d1                            ; Channel #0 (the display)
00:00010004 243C0001006A    	    23:                 move.l #greet,d2                    ; Pointer to message
00:0001000A 760E            	    24:                 move.l #greet_end-greet+1,d3        ; Length of message
00:0001000C 4E4F            	    25:                 trap #15 							; handles system functions
                            	    26:                 ;
                            	    27:                 ;		Write Hello world by writing straight to text memory
                            	    28:                 ;		do it 32 times from the screen top.
                            	    29:                 ;
00:0001000E 41F9FECA0000    	    30:                 lea.l 	$FECA0000,a0 				; screen text memory here
00:00010014 303C0020        	    31:                 move.w 	#32,d0 						; do it 32 times.
00:00010018 43FA0050        	    32: repeatmessage:  lea.l 	greet,a1 					; message here
                            	    33: copymessage:
00:0001001C 10D9            	    34: 				move.b 	(a1)+,(a0)+ 				; copy byte over.
00:0001001E 4A51            	    35: 				tst 	(a1) 						; is it zero.
00:00010020 66FA            	    36: 				bne 	copymessage 				; do until trailing 0 found.
00:00010022 56C8FFF4        	    37: 				dbne 	d0,repeatmessage 			; do it again !
                            	    38: 
00:00010026 41F9FEC80000    	    39: 				lea 	vicky3,a0 					; start register writes
00:0001002C 20BC0000040F    	    40: 				move.l 	#$0000040F,(a0) 			; graphics mode & bitmap on, text overlay on.
                            	    41: 
00:00010032 207CFECA8000    	    42: 				move.l 	#$FECA8000,a0 				; make text backgrounds all zero.
00:00010038 303C7FFF        	    43: 				move.w 	#$7FFF,d0 
00:0001003C 021800F0        	    44: _ZeroLSN:		and.b 	#$F0,(a0)+
00:00010040 51C8FFFA        	    45: 				dbra 	d0,_ZeroLSN
                            	    46: 
00:00010044 41F900900000    	    47: 				lea 	$00900000,a0 
                            	    48: 				;move.l 	#$00100000,$FEC80104
                            	    49: 
00:0001004A 323C01D6        	    50: 				move.w 	#470,d1
00:0001004E 303C027F        	    51: _Loop1:			move.w 	#639,d0
00:00010052 08000003        	    52: _Loop2:			btst 	#3,d0
00:00010056 6602            	    53: 				bne 	_Skip1
00:00010058 1080            	    54: 				move.b 	d0,(a0)
                            	    55: _Skip1:				
00:0001005A 5248            	    56: 				addq 	#1,a0
00:0001005C 51C8FFF4        	    57: 				dbra 	d0,_Loop2
00:00010060 51C9FFEC        	    58: 				dbra 	d1,_Loop1
                            	    59: 
00:00010064 7000            	    60: done:           clr.l d0                            ; sys_exit
00:00010066 7200            	    61:                 clr.l d1                            ; Return value = 0
00:00010068 4E4F            	    62:                 trap #15
                            	    63: 
00:0001006A 48656C6C6F2C2077	    64: greet:          dc.b "Hello, world!"
00:00010072 6F726C6421
00:00010077 00              	    65: greet_end:      dc.b 0
                            	    66: 
                            	    67: 


Symbols by name:
_Loop1                           A:0001004E
_Loop2                           A:00010052
_Skip1                           A:0001005A
_ZeroLSN                         A:0001003C
copymessage                      A:0001001C
done                             A:00010064
greet                            A:0001006A
greet_end                        A:00010077
repeatmessage                    A:00010018
start                            A:00010000
vicky3                           E:FEC80000

Symbols by value:
FEC80000 vicky3
00010000 start
00010018 repeatmessage
0001001C copymessage
0001003C _ZeroLSN
0001004E _Loop1
00010052 _Loop2
0001005A _Skip1
00010064 done
0001006A greet
00010077 greet_end
